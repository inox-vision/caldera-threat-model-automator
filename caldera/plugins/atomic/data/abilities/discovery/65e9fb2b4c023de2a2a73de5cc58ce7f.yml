- description: 'Scanning common ports in a /24 subnet. If no IP address for the target
    subnet is specified the test tries to determine the attacking machine''s "primary"
    IPv4 address first and then scans that address with a /24 netmask.

    The connection attempts to use a timeout parameter in milliseconds to speed up
    the scan. Please note the atomic might not print any output until the scans are
    completed.

    '
  id: 65e9fb2b4c023de2a2a73de5cc58ce7f
  name: Port-Scanning /24 Subnet with PowerShell
  platforms:
    windows:
      psh:
        cleanup: ''
        command: '$ipAddr = ""; if ($ipAddr -eq "") {;     $interface = Get-NetIPInterface
          -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty
          InterfaceAlias -First 1;     Write-Host "[i] Using Interface $interface";     $ipAddr
          = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object
          -ExpandProperty IPAddress; }; Write-Host "[i] Base IP-Address for Subnet:
          $ipAddr"; $subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf(''.'')
          + 1); Write-Host "[i] Assuming /24 subnet. scanning $subnetSubstring''1''
          to $subnetSubstring''254''"; $ports = 445, 3389; $subnetIPs = 1..254 | ForEach-Object
          { "$subnetSubstring$_" }; foreach ($ip in $subnetIPs) {;     foreach ($port
          in $ports) {;       try {;           $tcp = New-Object Net.Sockets.TcpClient;           $tcp.ConnectAsync($ip,
          $port).Wait(200) | Out-Null;       } catch {};       if ($tcp.Connected)
          {;           $tcp.Close();           Write-Host "Port $port is open on $ip";       };     };
          }'
        parsers:
          plugins.atomic.app.parsers.atomic_powershell:
          - source: validate_me
        payloads: []
  tactic: discovery
  technique:
    attack_id: T1046
    name: Network Service Discovery
