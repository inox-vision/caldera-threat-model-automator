- description: 'Downloads an image from a URL and sets it as the desktop wallpaper.

    '
  id: 90adc98ddf396bb7cb3b90a1f090a0e0
  name: Replace Desktop Wallpaper
  platforms:
    windows:
      psh:
        cleanup: $updateWallpapercode = @' ; using System.Runtime.InteropServices;
          namespace Win32{;     public class Wallpaper{ ;         [DllImport("user32.dll",
          CharSet=CharSet.Auto)] ;          static extern int SystemParametersInfo
          (int uAction , int uParam , string lpvParam , int fuWinIni) ;          ;          public
          static void SetWallpaper(string thePath){ ;             SystemParametersInfo(20,0,thePath,3);         };     };
          } ; '@; if (Test-Path -Path;      $orgImg = Get-Content -Path "#{pointer_to_orginal_wallpaper}";      add-type
          $updateWallpapercode ;      [Win32.Wallpaper]::SetWallpaper($orgImg); };
          Remove-Item "#{pointer_to_orginal_wallpaper}" -ErrorAction Ignore; Remove-Item
          "#{wallpaper_location}" -ErrorAction Ignore
        command: $url = "#{url_of_wallpaper}"; $imgLocation = "#{wallpaper_location}";
          $orgWallpaper = (Get-ItemProperty -Path Registry::'HKEY_CURRENT_USER\Control
          Panel\Desktop\' -Name WallPaper).WallPaper; $orgWallpaper | Out-File -FilePath
          "#{pointer_to_orginal_wallpaper}"; $updateWallpapercode = @' ; using System.Runtime.InteropServices;
          namespace Win32{;     public class Wallpaper{ ;         [DllImport("user32.dll",
          CharSet=CharSet.Auto)] ;          static extern int SystemParametersInfo
          (int uAction , int uParam , string lpvParam , int fuWinIni) ;          ;          public
          static void SetWallpaper(string thePath){ ;             SystemParametersInfo(20,0,thePath,3);         };     };
          } ; '@; $wc = New-Object System.Net.WebClient  ; try{  ;     $wc.DownloadFile($url,
          $imgLocation);     add-type $updateWallpapercode ;     [Win32.Wallpaper]::SetWallpaper($imgLocation);
          } ; catch [System.Net.WebException]{  ;     Write-Host("Cannot download
          $url") ;     add-type $updateWallpapercode ;     [Win32.Wallpaper]::SetWallpaper($imgLocation);
          } ; finally{    ;     $wc.Dispose()  ; }
        parsers:
          plugins.atomic.app.parsers.atomic_powershell:
          - source: validate_me
        payloads: []
  tactic: impact
  technique:
    attack_id: T1491.001
    name: 'Defacement: Internal Defacement'
