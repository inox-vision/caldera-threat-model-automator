- description: 'Runs shellcode in the current running process via a syscall.


    Steps taken with this technique

    1. Allocate memory for the shellcode with VirtualAlloc setting the page permissions
    to Read/Write

    2. Use the RtlCopyMemory macro to copy the shellcode to the allocated memory space

    3. Change the memory page permissions to Execute/Read with VirtualProtect

    4. Use syscall to execute the entrypoint of the shellcode


    - PoC Credit: (https://github.com/Ne0nd0g/go-shellcode#syscall)

    '
  id: 1fd9c83e1947cbaef3de0223d8a45740
  name: Run Shellcode via Syscall in Go
  platforms:
    windows:
      psh:
        cleanup: Stop-Process -Name CalculatorApp -ErrorAction SilentlyContinue
        command: $PathToAtomicsFolder\T1106\bin\x64\syscall.exe -debug
        parsers:
          plugins.atomic.app.parsers.atomic_powershell:
          - source: validate_me
        payloads: []
  tactic: execution
  technique:
    attack_id: T1106
    name: Native API
